// <auto-generated />
using System;
using AspHomework2.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspHomework2.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20200406113534_JobApplicationCreatedCol")]
    partial class JobApplicationCreatedCol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspHomework2.Persistence.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Praha"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Brno"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Ostrava"
                        });
                });

            modelBuilder.Entity("AspHomework2.Persistence.Entities.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPositionId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobPositionId");

                    b.ToTable("JobApplications");
                });

            modelBuilder.Entity("AspHomework2.Persistence.Entities.JobPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("JobPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchId = 1,
                            Title = "Angular junior"
                        },
                        new
                        {
                            Id = 2,
                            BranchId = 1,
                            Title = "PHP senior"
                        },
                        new
                        {
                            Id = 3,
                            BranchId = 2,
                            Title = "Ruby medior"
                        },
                        new
                        {
                            Id = 4,
                            BranchId = 2,
                            Title = "HR"
                        },
                        new
                        {
                            Id = 5,
                            BranchId = 3,
                            Title = "Java senior"
                        });
                });

            modelBuilder.Entity("AspHomework2.Persistence.Entities.JobApplication", b =>
                {
                    b.HasOne("AspHomework2.Persistence.Entities.JobPosition", "JobPosition")
                        .WithMany()
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspHomework2.Persistence.Entities.JobPosition", b =>
                {
                    b.HasOne("AspHomework2.Persistence.Entities.Branch", "Branch")
                        .WithMany("JobPositions")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
